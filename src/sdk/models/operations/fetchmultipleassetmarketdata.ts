/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

export class FetchMultipleAssetMarketDataRequest extends SpeakeasyBase {
    /**
     * Comma separated list of asset names or Ethereum addresses (max 500)
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=assets" })
    assets?: string;

    /**
     * Comma separated list of blockchain names
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=blockchains" })
    blockchains?: string;

    /**
     * Comma separated list of symbols
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=symbols" })
    symbols?: string;
}

export class FetchMultipleAssetMarketDataResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Bad request response.
     */
    @SpeakeasyMetadata()
    errorResponse?: shared.ErrorResponse;

    /**
     * Successful response with market data.
     */
    @SpeakeasyMetadata()
    multiDataResponse?: shared.MultiDataResponse;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
