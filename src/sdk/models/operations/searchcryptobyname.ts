/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SearchCryptoByNameRequest extends SpeakeasyBase {
    /**
     * Name or symbol (or starting name/symbol) of the asset
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
    name?: string;
}

/**
 * OK
 */
export class SearchCryptoByNameResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: shared.SearchCryptoData })
    @Expose({ name: "data" })
    @Type(() => shared.SearchCryptoData)
    data?: shared.SearchCryptoData[];
}

export class SearchCryptoByNameResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    object?: SearchCryptoByNameResponseBody;
}
