/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type AssetTransaction = {
    name?: string | undefined;
    symbol?: string | undefined;
    id?: number | undefined;
    contract?: string | undefined;
    logo?: string | undefined;
};

/** @internal */
export namespace AssetTransaction$ {
    export type Inbound = {
        name?: string | undefined;
        symbol?: string | undefined;
        id?: number | undefined;
        contract?: string | undefined;
        logo?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AssetTransaction, z.ZodTypeDef, Inbound> = z
        .object({
            name: z.string().optional(),
            symbol: z.string().optional(),
            id: z.number().int().optional(),
            contract: z.string().optional(),
            logo: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.symbol === undefined ? null : { symbol: v.symbol }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contract === undefined ? null : { contract: v.contract }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
            };
        });

    export type Outbound = {
        name?: string | undefined;
        symbol?: string | undefined;
        id?: number | undefined;
        contract?: string | undefined;
        logo?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AssetTransaction> = z
        .object({
            name: z.string().optional(),
            symbol: z.string().optional(),
            id: z.number().int().optional(),
            contract: z.string().optional(),
            logo: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.symbol === undefined ? null : { symbol: v.symbol }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contract === undefined ? null : { contract: v.contract }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
            };
        });
}
