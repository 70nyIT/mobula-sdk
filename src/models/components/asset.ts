/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type AssetData = {
    id?: number | undefined;
    name?: string | undefined;
    symbol?: string | undefined;
    contracts?: Array<string> | undefined;
    blockchains?: Array<string> | undefined;
    twitter?: string | null | undefined;
    website?: string | null | undefined;
    logo?: string | undefined;
    price?: number | undefined;
    marketCap?: number | undefined;
    liquidity?: number | undefined;
    volume?: number | undefined;
    description?: string | undefined;
    kyc?: string | null | undefined;
    audit?: string | null | undefined;
    totalSupplyContracts?: Array<string> | null | undefined;
    totalSupply?: number | undefined;
    circulatingSupply?: number | undefined;
    circulatingSupplyAddresses?: Array<string> | undefined;
    discord?: string | null | undefined;
    maxSupply?: number | undefined;
    chat?: string | null | undefined;
};

export type Asset = {
    data?: AssetData | undefined;
};

/** @internal */
export namespace AssetData$ {
    export type Inbound = {
        id?: number | undefined;
        name?: string | undefined;
        symbol?: string | undefined;
        contracts?: Array<string> | undefined;
        blockchains?: Array<string> | undefined;
        twitter?: string | null | undefined;
        website?: string | null | undefined;
        logo?: string | undefined;
        price?: number | undefined;
        market_cap?: number | undefined;
        liquidity?: number | undefined;
        volume?: number | undefined;
        description?: string | undefined;
        kyc?: string | null | undefined;
        audit?: string | null | undefined;
        total_supply_contracts?: Array<string> | null | undefined;
        total_supply?: number | undefined;
        circulating_supply?: number | undefined;
        circulating_supply_addresses?: Array<string> | undefined;
        discord?: string | null | undefined;
        max_supply?: number | undefined;
        chat?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<AssetData, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            symbol: z.string().optional(),
            contracts: z.array(z.string()).optional(),
            blockchains: z.array(z.string()).optional(),
            twitter: z.string().nullable().optional(),
            website: z.string().nullable().optional(),
            logo: z.string().optional(),
            price: z.number().optional(),
            market_cap: z.number().int().optional(),
            liquidity: z.number().int().optional(),
            volume: z.number().int().optional(),
            description: z.string().optional(),
            kyc: z.string().nullable().optional(),
            audit: z.string().nullable().optional(),
            total_supply_contracts: z.array(z.string()).nullable().optional(),
            total_supply: z.number().int().optional(),
            circulating_supply: z.number().int().optional(),
            circulating_supply_addresses: z.array(z.string()).optional(),
            discord: z.string().nullable().optional(),
            max_supply: z.number().int().optional(),
            chat: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.symbol === undefined ? null : { symbol: v.symbol }),
                ...(v.contracts === undefined ? null : { contracts: v.contracts }),
                ...(v.blockchains === undefined ? null : { blockchains: v.blockchains }),
                ...(v.twitter === undefined ? null : { twitter: v.twitter }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.market_cap === undefined ? null : { marketCap: v.market_cap }),
                ...(v.liquidity === undefined ? null : { liquidity: v.liquidity }),
                ...(v.volume === undefined ? null : { volume: v.volume }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.kyc === undefined ? null : { kyc: v.kyc }),
                ...(v.audit === undefined ? null : { audit: v.audit }),
                ...(v.total_supply_contracts === undefined
                    ? null
                    : { totalSupplyContracts: v.total_supply_contracts }),
                ...(v.total_supply === undefined ? null : { totalSupply: v.total_supply }),
                ...(v.circulating_supply === undefined
                    ? null
                    : { circulatingSupply: v.circulating_supply }),
                ...(v.circulating_supply_addresses === undefined
                    ? null
                    : { circulatingSupplyAddresses: v.circulating_supply_addresses }),
                ...(v.discord === undefined ? null : { discord: v.discord }),
                ...(v.max_supply === undefined ? null : { maxSupply: v.max_supply }),
                ...(v.chat === undefined ? null : { chat: v.chat }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
        name?: string | undefined;
        symbol?: string | undefined;
        contracts?: Array<string> | undefined;
        blockchains?: Array<string> | undefined;
        twitter?: string | null | undefined;
        website?: string | null | undefined;
        logo?: string | undefined;
        price?: number | undefined;
        market_cap?: number | undefined;
        liquidity?: number | undefined;
        volume?: number | undefined;
        description?: string | undefined;
        kyc?: string | null | undefined;
        audit?: string | null | undefined;
        total_supply_contracts?: Array<string> | null | undefined;
        total_supply?: number | undefined;
        circulating_supply?: number | undefined;
        circulating_supply_addresses?: Array<string> | undefined;
        discord?: string | null | undefined;
        max_supply?: number | undefined;
        chat?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AssetData> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            symbol: z.string().optional(),
            contracts: z.array(z.string()).optional(),
            blockchains: z.array(z.string()).optional(),
            twitter: z.string().nullable().optional(),
            website: z.string().nullable().optional(),
            logo: z.string().optional(),
            price: z.number().optional(),
            marketCap: z.number().int().optional(),
            liquidity: z.number().int().optional(),
            volume: z.number().int().optional(),
            description: z.string().optional(),
            kyc: z.string().nullable().optional(),
            audit: z.string().nullable().optional(),
            totalSupplyContracts: z.array(z.string()).nullable().optional(),
            totalSupply: z.number().int().optional(),
            circulatingSupply: z.number().int().optional(),
            circulatingSupplyAddresses: z.array(z.string()).optional(),
            discord: z.string().nullable().optional(),
            maxSupply: z.number().int().optional(),
            chat: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.symbol === undefined ? null : { symbol: v.symbol }),
                ...(v.contracts === undefined ? null : { contracts: v.contracts }),
                ...(v.blockchains === undefined ? null : { blockchains: v.blockchains }),
                ...(v.twitter === undefined ? null : { twitter: v.twitter }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.marketCap === undefined ? null : { market_cap: v.marketCap }),
                ...(v.liquidity === undefined ? null : { liquidity: v.liquidity }),
                ...(v.volume === undefined ? null : { volume: v.volume }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.kyc === undefined ? null : { kyc: v.kyc }),
                ...(v.audit === undefined ? null : { audit: v.audit }),
                ...(v.totalSupplyContracts === undefined
                    ? null
                    : { total_supply_contracts: v.totalSupplyContracts }),
                ...(v.totalSupply === undefined ? null : { total_supply: v.totalSupply }),
                ...(v.circulatingSupply === undefined
                    ? null
                    : { circulating_supply: v.circulatingSupply }),
                ...(v.circulatingSupplyAddresses === undefined
                    ? null
                    : { circulating_supply_addresses: v.circulatingSupplyAddresses }),
                ...(v.discord === undefined ? null : { discord: v.discord }),
                ...(v.maxSupply === undefined ? null : { max_supply: v.maxSupply }),
                ...(v.chat === undefined ? null : { chat: v.chat }),
            };
        });
}

/** @internal */
export namespace Asset$ {
    export type Inbound = {
        data?: AssetData$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<Asset, z.ZodTypeDef, Inbound> = z
        .object({
            data: z.lazy(() => AssetData$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });

    export type Outbound = {
        data?: AssetData$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Asset> = z
        .object({
            data: z.lazy(() => AssetData$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });
}
