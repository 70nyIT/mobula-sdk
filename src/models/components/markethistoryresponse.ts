/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Data = {
    priceHistory?: Array<Record<string, any>> | undefined;
};

export type MarketHistoryResponse = {
    data?: Data | undefined;
};

/** @internal */
export namespace Data$ {
    export type Inbound = {
        price_history?: Array<Record<string, any>> | undefined;
    };

    export const inboundSchema: z.ZodType<Data, z.ZodTypeDef, Inbound> = z
        .object({
            price_history: z.array(z.record(z.any())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.price_history === undefined ? null : { priceHistory: v.price_history }),
            };
        });

    export type Outbound = {
        price_history?: Array<Record<string, any>> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Data> = z
        .object({
            priceHistory: z.array(z.record(z.any())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.priceHistory === undefined ? null : { price_history: v.priceHistory }),
            };
        });
}

/** @internal */
export namespace MarketHistoryResponse$ {
    export type Inbound = {
        data?: Data$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<MarketHistoryResponse, z.ZodTypeDef, Inbound> = z
        .object({
            data: z.lazy(() => Data$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });

    export type Outbound = {
        data?: Data$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MarketHistoryResponse> = z
        .object({
            data: z.lazy(() => Data$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.data === undefined ? null : { data: v.data }),
            };
        });
}
