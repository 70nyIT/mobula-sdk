/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type SearchCryptoData = {
    blockchains?: Array<string> | undefined;
    contracts?: Array<string> | undefined;
    id?: number | undefined;
    liquidity?: number | undefined;
    logo?: string | undefined;
    marketCap?: number | undefined;
    name?: string | undefined;
    price?: number | undefined;
    symbol?: string | undefined;
    twitter?: string | null | undefined;
    volume?: number | undefined;
    website?: string | null | undefined;
};

/** @internal */
export namespace SearchCryptoData$ {
    export type Inbound = {
        blockchains?: Array<string> | undefined;
        contracts?: Array<string> | undefined;
        id?: number | undefined;
        liquidity?: number | undefined;
        logo?: string | undefined;
        market_cap?: number | undefined;
        name?: string | undefined;
        price?: number | undefined;
        symbol?: string | undefined;
        twitter?: string | null | undefined;
        volume?: number | undefined;
        website?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<SearchCryptoData, z.ZodTypeDef, Inbound> = z
        .object({
            blockchains: z.array(z.string()).optional(),
            contracts: z.array(z.string()).optional(),
            id: z.number().int().optional(),
            liquidity: z.number().int().optional(),
            logo: z.string().optional(),
            market_cap: z.number().int().optional(),
            name: z.string().optional(),
            price: z.number().optional(),
            symbol: z.string().optional(),
            twitter: z.string().nullable().optional(),
            volume: z.number().int().optional(),
            website: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.blockchains === undefined ? null : { blockchains: v.blockchains }),
                ...(v.contracts === undefined ? null : { contracts: v.contracts }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.liquidity === undefined ? null : { liquidity: v.liquidity }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
                ...(v.market_cap === undefined ? null : { marketCap: v.market_cap }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.symbol === undefined ? null : { symbol: v.symbol }),
                ...(v.twitter === undefined ? null : { twitter: v.twitter }),
                ...(v.volume === undefined ? null : { volume: v.volume }),
                ...(v.website === undefined ? null : { website: v.website }),
            };
        });

    export type Outbound = {
        blockchains?: Array<string> | undefined;
        contracts?: Array<string> | undefined;
        id?: number | undefined;
        liquidity?: number | undefined;
        logo?: string | undefined;
        market_cap?: number | undefined;
        name?: string | undefined;
        price?: number | undefined;
        symbol?: string | undefined;
        twitter?: string | null | undefined;
        volume?: number | undefined;
        website?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SearchCryptoData> = z
        .object({
            blockchains: z.array(z.string()).optional(),
            contracts: z.array(z.string()).optional(),
            id: z.number().int().optional(),
            liquidity: z.number().int().optional(),
            logo: z.string().optional(),
            marketCap: z.number().int().optional(),
            name: z.string().optional(),
            price: z.number().optional(),
            symbol: z.string().optional(),
            twitter: z.string().nullable().optional(),
            volume: z.number().int().optional(),
            website: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.blockchains === undefined ? null : { blockchains: v.blockchains }),
                ...(v.contracts === undefined ? null : { contracts: v.contracts }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.liquidity === undefined ? null : { liquidity: v.liquidity }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
                ...(v.marketCap === undefined ? null : { market_cap: v.marketCap }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.symbol === undefined ? null : { symbol: v.symbol }),
                ...(v.twitter === undefined ? null : { twitter: v.twitter }),
                ...(v.volume === undefined ? null : { volume: v.volume }),
                ...(v.website === undefined ? null : { website: v.website }),
            };
        });
}
